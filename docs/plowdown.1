.\" Copyright (c) 2008\-2011 Plowshare Team
.\"
.\" This is free documentation; you can redistribute it and/or
.\" modify it under the terms of the GNU General Public License as
.\" published by the Free Software Foundation; either version 3 of
.\" the License, or (at your option) any later version.
.\"
.\" The GNU General Public License's references to "object code"
.\" and "executables" are to be interpreted as the output of any
.\" document formatting or typesetting system, including
.\" intermediate and printed output.
.\"
.\" This manual is distributed in the hope that it will be useful,
.\" but WITHOUT ANY WARRANTY; without even the implied warranty of
.\" MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
.\" GNU General Public License for more details.
.\"
.\" You should have received a copy of the GNU General Public
.\" License along with this manual; if not, see
.\" <http://www.gnu.org/licenses/>.

.TH "plowdown" "1" "December 29, 2011" "GPL" "Plowshare GIT-snapshot"

.SH NAME
plowdown \- Command-line downloader for file-sharing websites

.SH SYNOPSIS
.B plowdown
[\fIOPTIONS\fP]...
[\fIMODULE_OPTIONS\fP]...
\fIURL\fP|\fIFILE\fP
[\fIURL\fP|\fIFILE\fP]...

.SH DESCRIPTION
.B plowdown
is a set of bash scripts designed for automatic downloads on file-sharing website.
It acts like a web browser, retreiving pages and filling html forms (including captchas).

Currently supported hosting sites list is available in README file.

.\" ****************************************************************************
.\" * Options                                                                  *
.\" ****************************************************************************
.SH OPTIONS

.SS Common options
.TP
.B -c, --check-link
Check and write alive link(s) to standard output, files are not downloaded.
.TP
.B -m, --mark-downloaded
Mark downloaded links in (regular) file arguments.
.TP
.BI -o, " " --output-directory "=DIRECTORY"
Directory where files will be saved. Default is current directory.
.TP
.B -x, --no-overwrite
Do not overwrite existing files. Existing file will be preserved and filename will be
prefixed with .1, .2, and so on.
.SS Logging options
.TP
.BI -v, " " --verbose "=LEVEL"
Set output verbose level:
.RS 
\fB0\fR  none,
.RE
.RS 
\fB1\fR  errors,
.RE
.RS
\fB2\fR  notice (default behavior),
.RE
.RS
\fB3\fR  debug,
.RE
.RS
\fB4\fR  report (very noisy, log HTML pages).
.RE
.TP
.B -q, --quiet
Alias for \fB-v0\fR. Do not print any debug messages.
.SS Tuning settings
.TP
.BI -i, " " --interface "=IFACE"
If your machine has several network interfaces, force using \fIIFACE\fR interface.
.TP
.BI -l, " " --limit-rate "=SPEED"
Limit download speed in bytes per seconds. Suffixes are:
.RS 
\fBk\fR  for kilobytes (Kb),
.RE
.RS
\fBm\fR  for megabytes (Mb),
.RE
.RS
\fBg\fR  for gigabytes (Gb).
.RE
.TP
.BI -t, " " --timeout "=SECS"
Cancel download after \fISECS\fR seconds of waits. This value applies for one download. Default is disabled (no timeout).
.TP
.BI -r, " " --max-retries "=N"
Set maximum retries for download failures (only captcha errors for now). Default is infinite retries. \fB-r 0\fP means no retry, so one single download try is made.
.TP
.BI "   " " " --captchatrader "=USER:PASSWORD"
Use CaptchaTrader account to solve captcha. If not specified, display image and prompt for manual entering.
.TP
.BI "   " " " --captchamethod "=METHOD"
Force specific captcha solving method. Available values: \fBprompt\fP and \fBnone\fP.
.TP
.BI "   " " " --temp-directory "=DIRECTORY"
Directory where files are temporarily downloaded.
.TP
.B "   " --no-extra-wait
Don't wait on uncommon events (file temporarily unavailable with or without time delay information, unallowed parallel downloads, download quota reached, come back later message, ...).
Don't use this switch if unsure, prefer \fI-r/--max-retries\fP instead.
.SS Miscellaneous options
.TP
.BI "   " " " --cookies "=FILE"
Use provided cookie file for HTTP requests. This can be used to bypass login process on registered (premium) accounts.
This is not implemented by all modules.
.TP
.B "   " --fallback
If no module is found for link, simply download it (HTTP GET).
.TP
.B "   " --no-curlrc
Do not use curl config file (~/.curlrc).
.TP
.B "   " --no-plowsharerc
Do not use local or global config file (plowshare.conf).
.TP
.B "   " --get-module
Get module(s) for URL(s) and quit. Useful for wrappers.
.TP
.BI "   " " " --run-download "=COMMAND"
Run external HTTP downloader program (like wget).
Available interpolations: %filename, %cookies, %url
.TP
.BI "   " " " --download-info-only "=TEMPLATE"
Don't download the file but echo a string.
Available interpolations: %filename, %cookies, %url
.SS Generic program information
.TP
.B -h, --help
Display this help and exit.
.TP
.B "   " --version
Output version information and exit.

.\" ****************************************************************************
.\" * Modules options                                                          *
.\" ****************************************************************************
.SH "MODULE OPTIONS"

.SS Common options
.TP
.BI -a, " " --auth "=USER:PASSWORD"
Use premium account.
.TP
.BI -b, " " --auth-free "=USER:PASSWORD"
Use free account.
.TP
.BI -p, " " --link-password "=PASSWORD"
Used for password-protected files.
.P
All switches are not implemented nor required for all modules.
See help message for detailed modules option list.

.\" ****************************************************************************
.\" * Notes                                                                    *
.\" ****************************************************************************
.SH NOTES

.SS
Command line authentication string format
Complete login must have
.I USER:PASSWORD
format. The first semi-colon character is the separator. So,
.I PASSWORD
can contain a semi-colon character without any trouble.
.TP
Don't forget to single-quote string if your password contain shell expandable characters (like space, $ or &).

.\" ****************************************************************************
.\" * Examples                                                                 *
.\" ****************************************************************************
.SH EXAMPLES

.SS 1) Download one or several files
.nf
$ plowdown http://www.rapidshare.com/files/12345678/foo.rar
.sp 1
# Downloads are successive (not parallel)
$ plowdown http://x7.to/abcdef http://www.megaupload.com/?d=ghijklmn
.sp 1
# Download a password-protected file from megaupload
$ plowdown \-p somepassword http://www.megaupload.com/?d=opqrstuv
.fi
.SS 2) Download a list of links (one link per line) commenting out (with #) those successfully downloaded 
.nf
$ plowdown \-m file_with_links.txt
.fi
.SS 3) Download with restrictions
.nf
$ plowdown \-l 50K \-i eth1 http://depositfiles.com/es/files/abcdefghi
.fi
.SS 4) Download with a proxy (3128 is the default port)
.nf
$ export http_proxy=http://192.168.0.20:80
.sp 0
$ plowdown http://www.rapidshare.com/files/12345678/foo.rar
.fi
.SS 5) Filter alive links in a text file 
.nf
$ plowdown \-c file_with_links.txt > file_with_active_links.txt
.fi
.SS 6) Use an alternatice web retriever for the final file download
.nf
$ plowdown \-\-run\-download='wget \-O "%filename" \-\-load\-cookies "%cookies" "%url"' http://x7.to/abcdef 
.fi
.SS 7) Safe download. Each URL will be limited in the number of tries and wait delays.
.nf
$ alias plowdown='plowdown \-\-no\-overwrite \-\-max\-retries=10 \-\-timeout=3600'
.sp 0
$ plowdown \-m file_with_links.txt
.fi

.\" ****************************************************************************
.\" * Files                                                                    *
.\" ****************************************************************************
.SH "FILES"
.TP
.I ~/.config/plowshare/plowshare.conf
This is the per-user configuration file. 
.TP
.I /etc/plowshare.conf
Systemwide configuration file.
.PP
The file format is described in
.BR plowshare.conf (5).

.\" ****************************************************************************
.\" * Exit codes                                                               *
.\" ****************************************************************************
.SH "EXIT CODES"

Possible exit codes are: 
.IP 0 
Success. It also means that link is alive if plowdown is invoked with \fI-c/--check-link\fP command-line option.
.IP 1
Fatal error. Upstream site updated or unexpected result.
.IP 2
No available module (provided URL is not supported).
.IP 3
Network error. Mostly curl related.
.IP 4
Authentication failed (bad login/password).
.IP 5
Timeout reached (refer to \fI-t/--timeout\fP command-line option).
.IP 6
Maximumn tries reached (refer to \fI-r/--max-retries\fP command-line option).
.IP 7
Captcha generic error.
.IP 8
System generic error.
.IP 10
Link alive but temporarily unavailable.
.IP 11
Link alive but requires a password.
.IP 12
Link alive but requires some authentication (private or premium link).
.IP 13
Link is dead.
.PP
If
.B plowdown
is invoked with multiple links or a link-list file and one or several errors occur, the first error code is returned added with 100.

.\" ****************************************************************************
.\" * Authors / See Also                                                       *
.\" ****************************************************************************
.SH AUTHORS
Plowshare was initially written by Arnau Sanchez. See the AUTHORS file for a list of some of the many other contributors.

Plowshare is (C) 2010-2011 The Plowshare Team
.SH "SEE ALSO"
.BR plowup (1),
.BR plowdel (1),
.BR plowlist (1),
.BR plowshare.conf (5).
